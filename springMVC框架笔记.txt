=======================================
-------------springMVC-----------------
=======================================
  #Model（模型）：
	数据模型。用于封装数据。
  #View（视图）：
	通常指的就是我们的 jsp 或者 html。作用一般就是展示数据的。通常视图是依据模型数据创建的。
  #Controller（控制器）：
	是应用程序中处理用户交互的部分。作用一般就是处理程序逻辑的。

--------------------------------------------
入门:
	1.web.xml中配置前端控制器控制器,并让前端控制器加载spring.xml
	2.spring.xml配置要扫描的包
	3.配置
		
--------------------------------------------
控制器类:@Controller
   *声明为控制器类
	--------------------------------------
  # @RequestMapping:
	value：用于指定请求的 URL。它和 path 属性的作用是一样的。
		1.写在类上,视为一级路径
		2.写在方法上,视为二级路径

	params：用于指定限制请求参数的条件。它支持简单的表达式。要求请求参数的 key 和 value 必须和配置的一模一样。
	例:
	params = {"name"}，表示请求参数必须有name
	params = {"moeny!100"}，表示请求参数中money不能是 100。

	method：用于指定请求的方式。
	headers：用于指定限制请求消息头的条件。
	
	--------------------------------------
  # 请求参数的绑定:
	1.自动绑定(自动类型转换):
	  基本类型参数
	  POJO类型参数(自动封装,需要名字一一对应)
	  数组和集合类型参数：
	    *第一种：
		要求集合类型的请求参数必须在 POJO 中。在表单中请求参数名称要和 POJO 中集合属性名称相同。
			给 List 集合中的元素赋值，使用下标。
			给 Map 集合中的元素赋值，使用键值对。
	    *第二种：
		接收的请求参数是 json 格式数据。需要借助一个注解实现。

	2.自定义类型转换:
	  1.实现Converter<S, T>接口
	  2.在spring配置文件中配置类型转换器
		1.配置类型转换工厂:
		  ConversionServiceFactoryBean
		2.给工厂注入新的类型转换器
	  3.在annotation-driven标签中引用配置的类型转换服务

	-----------------------------------------------
  # 获取原生servletAPI:
	直接在参数上需要的对象
		HttpServletRequest request,
		HttpServletResponse response,
		HttpSession session
	
	-----------------------------------------------
  # 常用注解
	1.@RequestParam:控制器参数上
		把请求中指定名称的参数给控制器中的形参赋值。
	  属性：
		value：请求参数中的名称。
		required：请求参数中是否必须提供此参数。默认值：true。表示必须提供，如果不提供将报错。

	2.@RequestBody:参数上
		用于获取请求体内容。直接使用得到是 				key=value&key=value...结构的数据。
		get 请求方式不适用。
	  属性：
		required：是否必须有请求体。默认值是:true。当取值为 true 时,get 请求方式会报错。如果取值为 false，get 请求得到是 null。

	3.@PathVaribale:参数上
		用于绑定 url 中的占位符。例如：请求 url 中 /delete/{id}，这个{id}就是 url 占位符。
	  属性：
		value：用于指定 url 中占位符名称。
		required：是否必须提供占位符。

  	*表单发送其他类型请求的方式:
	   1.配置HiddentHttpMethodFilter过滤器
	   2.在表单中加入隐藏域
		name="_method"  value="请求方式"

	4.@RequestHeader:参数上
		用于获取请求消息头。
	  属性：
		value：提供消息头名称
		required：是否必须有此消息头

	5.@CookieValue:参数上
		用于获取指定cookie名称的值
	  属性：
		value：指定 cookie 的名称。
		required：是否必须有此 cookie

	6.@ModelAttribute:
	  1.出现在方法上，表示当前方法会在控制器的方法执行之前，先执行。
		返回值自动加入到request域中

	  2.出现在控制器参数上，获取指定的数据给参数赋值。
		1.在@ModelAttribute修饰的方法里使用Map参数,并且给map赋值.
		2.在控制器参数上使用@ModelAttribute获取上步骤中map集合中指定key的值

	7.@SessionAttribute:控制器类上
		用于多次执行控制器方法间的参数共享。

	  属性：
		value：用于指定存入的属性名称
		type：用于指定存入的数据类型。
		--------------------------
***
    控制器方法加入Model model参数,向里面传值(会帮你存入session域)也可以从中获取session域的值

	=======================================
  # 控制器响应数据和结果视图
	1.控制器方法返回时,返回值(String类型)会传递给视图解析器,跳转到目标页面.
	2.使用void类型的方法时,可以使用以下方法跳转页面:
		1.使用request转发.
		2.使用response重定向
		3.通过response指定响应结果

	3.ModelAndView 是 SpringMVC为我们提供的一个对象
		1.可以向session域存取数据
		2.可以指定逻辑视图名称,传递给视图解析器		
--------------------------------------------------
	* @ResponseBody:注解在Controller方法返回值上
		Controller返回值直接响应给客户端.
			**异步请求常用**
		
		该注解用于将 Controller方法返回的对象，通过 HttpMessageConverter 接口转换为指定格式的数据如：json,xml 等，通过 Response 响应给客户端

		如果导入了jackson的3个jar包,
		可以自动完成json和对象的自动转换
-------------------------------------------------		
=============================================
DispatcherServlet-----前端控制器-----重要
HandleMapping---------控制器映射器
HandlerAdapter--	------控制器适配器
controller------	------控制器---------我们主要编写业务的地方
viewResolve-----------视图解析器------配置一下前缀后缀
视图
